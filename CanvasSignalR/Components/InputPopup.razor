@inject NavigationManager Navigation

<div class="popup-overlay" @onclick="Close">
    <div class="popup-modal" @onclick:stopPropagation="true">
        <div class="popup-header">
     <h3>✨ Create New Canvas</h3>
   <button class="close-btn" @onclick="Close" aria-label="Close">✕</button>
        </div>
     
        <div class="popup-body">
 <label for="canvasName">Canvas Name</label>
            <input id="canvasName" 
       @bind="UserInput" 
    @bind:event="oninput"
 @onkeypress="HandleKeyPress"
  placeholder="Enter a unique name..." 
    type="text"
     autofocus />
      <p class="input-hint">Choose a memorable name for your collaborative canvas</p>
 </div>
    
     <div class="popup-footer">
 <button @onclick="Close" class="secondary">Cancel</button>
        <button @onclick="Create" 
  disabled="@string.IsNullOrWhiteSpace(UserInput)"
 class="primary">
         Create Canvas
      </button>
    </div>
    </div>
</div>

@code {
 [Parameter] public EventCallback OnClose { get; set; }
    public string UserInput { get; set; } = string.Empty;

    private async Task Close()
    {
await OnClose.InvokeAsync(null);
    }

    private async Task Create()
 {
        if (!string.IsNullOrWhiteSpace(UserInput))
 {
    await OnClose.InvokeAsync(null);
   Navigation.NavigateTo($"/canvas/{UserInput}");
        }
    }

private async Task HandleKeyPress(KeyboardEventArgs e)
    {
     if (e.Key == "Enter" && !string.IsNullOrWhiteSpace(UserInput))
        {
       await Create();
        }
  else if (e.Key == "Escape")
        {
         await Close();
      }
    }
}
